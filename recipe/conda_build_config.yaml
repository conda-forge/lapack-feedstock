channel_targets:
  - conda-forge blasdev-main
  - conda-forge blasdev-gcc7                            # [(linux or osx)     and (environ.get('CF_COMPILER_STACK') == 'comp7')]


# dual build configuration
channel_sources:
  - conda-forge,defaults
  - conda-forge/label/gcc7,defaults             # [(linux or osx)     and (environ.get('CF_COMPILER_STACK') == 'comp7')]

docker_image:                                   # [linux or ppc64le]
  - condaforge/linux-anvil                      # [linux]
  - condaforge/linux-anvil-comp7                # [linux              and (environ.get('CF_COMPILER_STACK') == 'comp7')]

  - condaforge/ppc-anvil                        # [ppc64le]

build_number_decrement:                         # [(linux or osx)     and (environ.get('CF_COMPILER_STACK') == 'comp7')]
  - 1000                                        # [(linux or osx)     and (environ.get('CF_COMPILER_STACK') == 'comp7')]
  - 0                                           # [(linux or osx)     and (environ.get('CF_COMPILER_STACK') == 'comp7')]

c_compiler:
  - toolchain_c                # [linux or osx]
  # new compilers
  - gcc                        # [linux                               and (environ.get('CF_COMPILER_STACK') == 'comp7')]
  - clang                      # [osx                                 and (environ.get('CF_COMPILER_STACK') == 'comp7')]

  - gcc                        # [ppc64le]

  - vs2008                     # [win]
  - vs2015                     # [win]
  - vs2015                     # [win and (environ.get('CF_MAX_PY_VER', '') >= '37')]
cxx_compiler:
  - toolchain_cxx              # [linux or osx]
  # new compilers
  - gxx                        # [linux                               and (environ.get('CF_COMPILER_STACK') == 'comp7')]
  - clangxx                    # [osx                                 and (environ.get('CF_COMPILER_STACK') == 'comp7')]

  - gxx                        # [ppc64le]

  - vs2008                     # [win]
  - vs2015                     # [win]
  - vs2015                     # [win and (environ.get('CF_MAX_PY_VER', '') >= '37')]
fortran_compiler:              # [unix or win64]
  - toolchain_fort             # [unix and not ppc64le]
  - gfortran                   # [(linux or osx)                      and (environ.get('CF_COMPILER_STACK') == 'comp7')]

  - gfortran                   # [ppc64le]
  - flang                      # [win64]
